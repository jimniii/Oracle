
-- 6장: PL/SQL


SET SERVEROUTPUT ON;
BEGIN 
    DBMS_OUTPUT.PUT_LINE('HELLO ORACLE');
END;

--

DECLARE
    NO NUMBER(4) := 1001;
    NAME VARCHAR2(10) := '홍길동';
    HP CHAR(13) := '010-1000-1001';
    ADDR VARCHAR2(100) := '부산광역시';
BEGIN
    -- DBMS_OUTPUT.PUT_LINE('번호 : ' || NO);
    DBMS_OUTPUT.PUT_LINE('이름 : ' || NAME);
    DBMS_OUTPUT.PUT_LINE('전화 : ' || HP);
    DBMS_OUTPUT.PUT_LINE('주소 : ' || ADDR);
END;
/


SET SERVEROUTPUT ON;

DECLARE NO CONSTANT NUMBER(4) := 1001;
    NAME VARCHAR2(10);
    HP CHAR(13) := '000-0000-0000';
    AGE NUMBER(2) DEFAULT 1;
    ADDR VARCHAR2(10) NOT NULL := '부산';
BEGIN
    NAME := '김유신';
    HP := '010-1000-1001';
    DBMS_OUTPUT.PUT_LINE('번호: ' || NO);
    DBMS_OUTPUT.PUT_LINE('이름: ' || NAME);
    DBMS_OUTPUT.PUT_LINE('전화: ' || HP);
    DBMS_OUTPUT.PUT_LINE('나이: ' || AGE);
    DBMS_OUTPUT.PUT_LINE('주소: ' || ADDR);
END;
/


-- 열 참조형 변수 실습

DECLARE 
    NO DEPT.DEPTNO%TYPE;
    NAME DEPT.DNAME%TYPE;
    DTEL DEPT.DTEL%TYPE;
BEGIN
    SELECT *
    INTO NO,NAME,DTEL
    FROM DEPT
    WHERE DEPTNO = 30;
    
    DBMS_OUTPUT.PUT_LINE('부서번호 : ' || NO);
    DBMS_OUTPUT.PUT_LINE('부서명: ' || NAME);
    DBMS_OUTPUT.PUT_LINE('부서전화번호: '|| DTEL);
END;
/



DECLARE
    ROW_DEPT DEPT%ROWTYPE;
BEGIN
    SELECT * INTO ROW_DEPT FROM DEPT
    WHERE DEPTNO =40;
    
    DBMS_OUTPUT.PUT_LINE('부서번호: ' || ROW_DEPT.DEPTNO);
    DBMS_OUTPUT.PUT_LINE('부서명: ' || ROW_DEPT.DNAME);
    DBMS_OUTPUT.PUT_LINE('전화번호: ' || ROW_DEPT.DTEL);
END;
/   
    
    
-- 레코드 자료형 기본 실습

DECLARE 
    TYPE REC_DEPT IS RECORD(
    DEPTNO NUMBER(5),
    DNAME DEPT.DNAME%TYPE,
    DTEL DEPT.DTEL%TYPE
);
    dept_rec REC_DEPT;
BEGIN 
    dept_rec.deptno := 10;
    dept_rec.dname := '개발부';
    dept_rec.dtel := '051-512-1010';
    
    DBMS_OUTPUT.PUT_LINE('deptno: ' || dept_rec.deptno);
    DBMS_OUTPUT.PUT_LINE('dname: ' || dept_rec.dname);
    DBMS_OUTPUT.PUT_LINE('dtel: ' || dept_rec.dtel);
    DBMS_OUTPUT.PUT_LINE('PL/SQL 종료...');
END;
/








DECLARE
    TYPE ARR_CITY IS TABLE OF VARCHAR2(20) INDEX BY PLS_INTEGER;
    arrCity ARR_CITY;
BEGIN
    arrCity(1) := '서울';
    arrCity(2) := '대전';
    arrCity(3) := '대구';
    
    DBMS_OUTPUT.PUT_LINE('arrCity(1): ' || arrCity(1)); 
    DBMS_OUTPUT.PUT_LINE('arrCity(2): ' || arrCity(2)); 
    DBMS_OUTPUT.PUT_LINE('arrCity(3): ' || arrCity(3)); 
    DBMS_OUTPUT.PUT_LINE('PL/SQL 종료...');
END;
/



DECLARE
    V_DEPT_ROW DEPT%ROWTYPE;
    
    CURSOR c1 IS SELECT * FROM DEPT WHERE DEPTNO = 40;
BEGIN
    -- 커서 열기
    OPEN c1;
    
    -- 커서 데이터 입력
    FETCH c1 INTO V_DEPT_ROW;
    
    -- 커서 데이터 출력
    DBMS_OUTPUT.PUT_LINE('DEPTNO: ' || V_DEPT_ROW.DEPTNO);
    DBMS_OUTPUT.PUT_LINE('DNAME: ' || V_DEPT_ROW.DNAME);
    DBMS_OUTPUT.PUT_LINE('DTEL: ' || V_DEPT_ROW.DTEL);
    
    CLOSE c1;
END; 
/




// 여러 행 결과를 처리하는 커서 사용

DECLARE
    V_EMP_ROW EMP%ROWTYPE;
    CURSOR emp_cursor IS SELECT * FROM EMP;
BEGIN
    OPEN emp_cursor;
    LOOP
        FETCH emp_cursor INTO V_EMP_ROW; // 여기서부터
        EXIT WHEN emp_cursor%NOTFOUND; // null일때까지 반복할거임
        
        DBMS_OUTPUT.PUT_LINE('--------------------');
        DBMS_OUTPUT.PUT_LINE('EMPNO: ' || V_EMP_ROW.EMPNO);
        DBMS_OUTPUT.PUT_LINE('NAME: ' || V_EMP_ROW.NAME);
        DBMS_OUTPUT.PUT_LINE('GENDER: ' || V_EMP_ROW.GENDER);
    END LOOP;
    
    CLOSE emp_cursor;   
END;
/

-- 프로시저

CREATE PROCEDURE hello_procedure(
    p_name IN VARCHAR2
    )
IS
BEGIN
    DBMS_OUTPUT.PUT_LINE('안녕하세요, ' || p_name || '님!');
    DBMS_OUTPUT.PUT_LINE('환영함');
END;
/

EXECUTE hello_procedure('홍길동');
EXECUTE hello_procedure('김철수');
DROP PROCEDURE hello_procedure;


-- 함수

CREATE FUNCTION get_emp_ename(p_empno NUMBER)
RETURN VARCHAR2
IS
    v_ename VARCHAR2(20);
BEGIN
    SELECT NAME
    INTO v_ename
    FROM EMP
    WHERE EMPNO = p_empno;
    RETURN v_ename;
END;
/

-- 함수 실행
SELECT get_emp_ename(0000) FROM DUAL;


----------- 트리거 -------------

-- 로그 테이블 생성 --
CREATE TABLE emp_log(
    log_date DATE,
    empno NUMBER,
    action VARCHAR2(10)
);


-- 트리거 생성
CREATE TRIGGER trgg_emp_insert
AFTER INSERT ON emp
FOR EACH ROW
BEGIN
    INSERT INTO emp_log(log_date,empno,action)
    VALUES (SYSDATE, :NEW.empno, 'INSERT');
END;
/

SELECT * FROM EMP;
-- INSERT 테스트
INSERT INTO EMP VALUES(2002,'김춘추','M','사원',10,SYSDATE);

SELECT * FROM emp_log;




















